<nav class="navbar navbar-expand-md navbar-light bg-light fixed-top">
  <div class="container">
      <a class="navbar-brand" routerLink="/">
        <i class="fas fa-leaf"></i>
      </a>
      <button class="navbar-toggler" (click)="isCollapsed=!isCollapsed" type="button" data-toggle="collapse" data-target="#navbarsExampleDefault" aria-controls="navbarsExampleDefault" [attr.aria-expanded]="!isCollapsed" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
    
      <div class="collapse navbar-collapse" [ngbCollapse]=isCollapsed id="navbarsExampleDefault">
        <ul class="navbar-nav mr-auto">     
          <li class="nav-item">
            <a class="nav-link" routerLink="/shopping-cart">
              <i class="fas fa-shopping-cart"></i>
              <span class="badge badge-warning badge-pill" *ngIf="cart$ | async as cart">
                {{ cart.totalItemsCount }}
              </span>
            </a>        
          </li>                       
        </ul>
        <ul class="navbar-nav">                 
            <ng-template #anonymousUser>
              <li class="nav-item">
                <a class="nav-link" routerLink="/login">Login</a>
              </li>
            </ng-template>            
            <li ngbDropdown *ngIf="appUser; else anonymousUser" class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" id="dropdown01" data-toggle="dropdown" 
              aria-haspopup="true" aria-expanded="false" ngbDropdownToggle>{{appUser.name}}</a>
              <div ngbDropdownMenu class="dropdown-menu" aria-labelledby="dropdown01">
                <a class="dropdown-item" routerLink="/my/orders">My Orders</a>
                <ng-container *ngIf="appUser.isAdmin">
                  <a class="dropdown-item" routerLink="/admin/orders">Manage Orders</a>
                  <a class="dropdown-item" routerLink="/admin/products">Manage Products</a>
                </ng-container>          
                <a class="dropdown-item" (click)="logout()">Log Out</a>
              </div>
            </li>
          </ul>    
      </div>
  </div>  
</nav>




.........................bs-navbar.ts.........................
import { Component, OnInit, OnDestroy } from '@angular/core';
import { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';
import { AuthService } from 'shared/services/auth.service';
import { UserService } from 'shared/services/user.service';
import { AppUser } from 'shared/models/app-user';
import { ShoppingCartService } from 'shared/services/shopping-cart.service';
import { Observable } from 'rxjs';
import { ShoppingCart } from 'shared/models/shopping-cart';

@Component({
  selector: 'bs-navbar',
  templateUrl: './bs-navbar.component.html',
  styleUrls: ['./bs-navbar.component.css']
})
export class BsNavbarComponent implements OnInit {
  
  appUser:AppUser;
  isCollapsed = true;
  cart$:Observable<ShoppingCart>;
  constructor(private auth: AuthService, private shoppingCartService: ShoppingCartService) {
    
  }

  logout() {    
    this.auth.logout();    
  }

  async ngOnInit() {
    this.auth.appUser$.subscribe(appUser => this.appUser = appUser);        
    this.cart$ = await this.shoppingCartService.getCart();
  }

  ngAfterViewInit() {
    
  }
}
